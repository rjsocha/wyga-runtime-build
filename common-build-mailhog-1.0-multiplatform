#!/bin/bash
set -eu
CONSTRAINT=1.0

_name=$(basename $0)
if ! [[ $_name =~ ^multi-build-([^-]+)-([0-9]+\.[0-9]+)\.([0-9]+)-(.+)$ ]]
then
  echo "ERROR: unable to parse specification ..."
  exit 1
fi

_base="${BASH_REMATCH[1]}"
_major="${BASH_REMATCH[2]}"
_minor="${BASH_REMATCH[3]}"
_flavour="${BASH_REMATCH[4]}"

MAJOR_VERSION="${_major}"
MINOR_VERSION="${_minor}"
FLAVOUR="${_flavour}"

VERSION=${MAJOR_VERSION}.${MINOR_VERSION}-${FLAVOUR}
RELEASE=${MAJOR_VERSION}-${FLAVOUR}
PUBLISH="latest ${MAJOR_VERSION}"

_DOCKERFILE="dockerfile/mailhog/Dockerfile"

if [[ ! -s ${_DOCKERFILE} ]]
then
  echo "missing: ${_DOCKERFILE}"
  exit 1
fi

if [[ ${CONSTRAINT} != ${MAJOR_VERSION} ]]
then
  echo "ERROR: wrong specification (constraint) ..."
  exit 1
fi

source build.config
echo "Building: ${REGISTRY}/mailhog:${VERSION} from ${_DOCKERFILE}"
_tags=()

for _release in ${PUBLISH//,/ }
do
  _tags+=( "-t" )
  _tags+=( "${REGISTRY}/mailhog:${_release}" )
done

docker buildx build --platform linux/amd64,linux/arm64 -t ${REGISTRY}/mailhog:${VERSION} ${_tags[@]} --push --no-cache --pull --build-arg VERSION=${VERSION} -f "${_DOCKERFILE}" .
echo "Build: ${REGISTRY}/mailhog:${VERSION}"

echo "$(date -R): ${REGISTRY}/mailhog:${VERSION}: OK" | tee -a log.mailhog
