#!/bin/bash
set -eu
CONSTRAINT=10.10
PLATFORMS="linux/amd64,linux/arm64"

_name=$(basename $0)
if ! [[ $_name =~ ^multi-build-([^-]+)-([0-9]+\.[0-9]+)\.([0-9]+)-(.+)$ ]]
then
  echo "ERROR: unable to parse specification ..."
  exit 1
fi

_base="${BASH_REMATCH[1]}"
_major="${BASH_REMATCH[2]}"
_minor="${BASH_REMATCH[3]}"
_flavour="${BASH_REMATCH[4]}"

MAJOR_VERSION="${_major}"
MINOR_VERSION="${_minor}"
FLAVOUR="${_flavour}"

VERSION="${MAJOR_VERSION}.${MINOR_VERSION}"
RELEASE="${MAJOR_VERSION}-${FLAVOUR}"

_DOCKERFILE="dockerfile/pma/db/Dockerfile.${MAJOR_VERSION}"

if [[ ! -s ${_DOCKERFILE} ]]
then
  echo "missing: ${_DOCKERFILE}"
  exit 1
fi

if [[ ${CONSTRAINT} != ${MAJOR_VERSION} ]]
then
  echo "ERROR: wrong specification (constraint) ..."
  exit 1
fi

source build.config

_tags=()
for _release in ${RELEASE}
do
  _tags+=( "-t" " ${REGISTRY}/mariadb:${_release}" )
done

echo "Building: ${REGISTRY}/maridb:${VERSION}-${FLAVOUR} from ${_DOCKERFILE}"
docker buildx build --platform "${PLATFORMS}" -t ${REGISTRY}/mariadb:${VERSION}-${FLAVOUR} ${_tags[@]} --push --no-cache --pull --build-arg VERSION=${VERSION} -f "${_DOCKERFILE}" .

echo "Build: ${REGISTRY}/mariadb:${VERSION}-${FLAVOUR}"

echo "$(date -R): ${REGISTRY}/mariadb:${VERSION}-${FLAVOUR}: OK" | tee -a log.mariadb-pma
