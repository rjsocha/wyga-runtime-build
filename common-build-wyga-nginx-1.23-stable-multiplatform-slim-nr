#!/bin/bash
set -eu
CONSTRAINT=1.23

_name=$(basename $0)
if ! [[ $_name =~ ^multi-build-([^-]+)-([0-9]+\.[0-9]+)\.([0-9]+)-(.+)-slim-nr$ ]]
then
  echo "ERROR: unable to parse specification ..."
  exit 1
fi

_base="${BASH_REMATCH[1]}"
_major="${BASH_REMATCH[2]}"
_minor="${BASH_REMATCH[3]}"
_flavour="${BASH_REMATCH[4]}"

MAJOR_VERSION="${_major}"
MINOR_VERSION="${_minor}"
FLAVOUR="${_flavour}"

VERSION="${MAJOR_VERSION}.${MINOR_VERSION}-${FLAVOUR}"
RELEASE="${MAJOR_VERSION}-slim-nr"

_DOCKERFILE="dockerfile/nginx/Dockerfile.1.23-wyga-slim-nr"

if [[ ! -s ${_DOCKERFILE} ]]
then
  echo "missing: ${_DOCKERFILE}"
  exit 1
fi

if [[ ${CONSTRAINT} != ${MAJOR_VERSION} ]]
then
  echo "ERROR: wrong specification (constraint) ..."
  exit 1
fi
source build.config
echo "Building: ${REGISTRY}/nginx:${VERSION} from ${_DOCKERFILE}"

docker buildx use multi-arch
docker buildx build --platform linux/amd64,linux/i386,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x -t ${REGISTRY}/nginx:${RELEASE} --push --no-cache --pull --build-arg VERSION=${VERSION} -f "${_DOCKERFILE}" .
echo "Build: ${REGISTRY}/nginx:${RELEASE}"

echo "$(date -R): ${REGISTRY}/nginx:${RELEASE}: OK" | tee -a log.nginx
